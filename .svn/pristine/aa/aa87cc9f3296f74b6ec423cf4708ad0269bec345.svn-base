<?php
namespace Home\Controller;
use Think\Controller;

class ApiController extends Controller {

	/**
	 * Ajax方式返回数据到客户端
	 * @access protected
	 * @param mixed $data 要返回的数据
	 * @param String $type AJAX返回数据格式
	 * @return void
	 */
	protected function ajaxReturn($data,$type='') {
		if(empty($type)) $type  =   C('DEFAULT_AJAX_RETURN');
		switch (strtoupper($type)){
			case 'JSON' :
				// 返回JSON数据格式到客户端 包含状态信息
				header('Content-Type:application/json; charset=utf-8');
				exit(json_encode($data));
			case 'XML'  :
				// 返回xml格式数据
				header('Content-Type:text/xml; charset=utf-8');
				exit(xml_encode($data));
			case 'JSONP':
				// 返回JSON数据格式到客户端 包含状态信息
				header('Content-Type:application/json; charset=utf-8');
				$handler  =   isset($_GET[C('VAR_JSONP_HANDLER')]) ? $_GET[C('VAR_JSONP_HANDLER')] : C('DEFAULT_JSONP_HANDLER');
				exit($handler.'('.json_encode($data).');');
			case 'EVAL' :
				// 返回可执行的js脚本
				header('Content-Type:text/html; charset=utf-8');
				exit($data);
		}
	}

	private static $num = 50;

	/**
	 * 上传账号
	 */
	public function up_user_data(){
		$msg = isset($_POST['msg'])?$_POST['msg']:'';
		if(!$msg){
			$this->ajaxReturn(array('code' => -1, 'msg' => '上传失败'));
		}
		$msg = json_decode($msg, true);
		if(!is_array($msg)){
			$this->ajaxReturn(array('code' => -1, 'msg' => '上传数据错误'));
		}
		foreach($msg as &$v){
			if(!isset($v['email']) || !isset($v['pass']) || !isset($v['cookie']) || !isset($v['user_id']) || !isset($v['show_id']) || !isset($v['nick_name']) || !isset($v['authcookie'])  || !isset($v['authcookie']) ){
				$this->ajaxReturn(array('code' => -1, 'msg' => '参数错误..'));
			}
			$v['add_time'] = time();
		}

		$users = M('users')->addAll($msg);
		if($users){
			$this->ajaxReturn(array('code' => 0, 'msg' => '添加成功'));
		}
		$this->ajaxReturn(array('code' => -1, 'msg' => '添加失败'));
	}

	/**
	 * 获取帐号
	 */
	public function get_user_data(){
		//$nums = isset($_POST['nums'])?$_POST['nums']:1;

		$users = M('users')->order("num asc")->limit(self::$num)->select();
		if($users){
			foreach($users as $v){
				$id[] = $v['id'];
			}
			$where['id'] = array('IN', implode(',',$id));
			M('users')->where($where)->setInc('num');
		}
		$this->ajaxReturn(array('code' => 0, 'user_list' => $users));
	}

	/**
	 * 检查更新
	 */
	public function check_update(){
		$ret = M('version')->order("id desc")->find();
		$this->ajaxReturn(array('code' => 0, 'version' => $ret));
	}


	/**
	 * 获取唯一机器号
	 */
	public function get_card_id(){
		$client_ip = get_client_ip();
		$where['users'] = array('like', "%$client_ip%");
		$machine = M("machine")->order("id desc")->where($where)->find();
		$data = array(
			'ip' => $client_ip,
			'add_time' => time(),
			'update_time' => time(),
		);
		if($machine){
			$pix_arr = explode('-',$machine['ip']);
			$pic = isset($pix_arr[1])?$pix_arr[1]+1:2;
			$data['ip'] = $data['ip']."-".$pic;
		}
		$data['code'] = md5($data['ip'].time());
		M("machine")->add($data);
		$this->ajaxReturn(array('code' => 0, 'machine_code' => $data['code']));
	}

	/**
	 * 分配任务
	 */
	public function task_allcation(){
		$machine_list = M('machine')->where(array('status' => 0))->select();
		if(!$machine_list){
			exit("暂无空闲机器");
		}
		$renwu_list = M('renwu')->where(array('status' => 1, 'complete_number' => array('gt', 0)))->select();
		if(!$renwu_list){
			exit("暂无任务");
		}
		$nums = self::$num;
		set_time_limit(0);
		ini_set('default_socket_timeout', -1);
		foreach($renwu_list as $k=>$v){
			while($v['complete_number'] > 0){
				$where = " status = 0 ";
				$machine_lists = M('machine')->where(array('room_num' => $v['room_num'], 'status' => 1))->field("ip")->select();
				if($machine_lists){
					foreach($machine_lists as $key=>$val){
						$where .= "AND ip NOT LIKE '%{$val['ip']}%'";
					}
				}
				$machine = M('machine')->where($where)->find();
				if($machine){
					if($v['complete_number'] - $nums >= 0){
						$update['get_num'] = $nums;
						$v['complete_number'] -= $nums;
					}else{
						$update['get_num'] = $v['complete_number'];
						$v['complete_number'] = 0;
					}
					$update['room_num'] = $v['room_num'];
					$update['status'] = 1;
					$update['renwu_id'] = $v['id'];
					M('machine')->where(array('id' => $machine['id']))->save($update);
					M('renwu')->where(array('id' => $v['id']))->save(array('complete_number' => $v['complete_number']));
				}else{
					break;
				}
			}
		}
	}


	/**
	 * 心跳
	 */
	public function heart_beat(){
		$machine_code = I('post.machine_code');
		$complete_num = I('post.complete_num');

		if(!$machine_code){
			$this->ajaxReturn(array('code' => -1, 'msg' => '缺少参数！'));
		}
		$machine = M('machine')->where(array('code' => $machine_code))->find();
		if(!$machine){
			$this->ajaxReturn(array('code' => -2, 'msg' => '机器不存在！'));
		}

		$renwu_data['renwu']  = array();
		$renwu_data['renwu']['status'] = 0;
		$renwu_data['renwu']['sleep'] = 1000;
		$renwu_data['renwu']['restart'] = $machine['restart'];
		if($machine['get_num'] > 0 && $machine['status'] == 1){
			$renwu_data['renwu']['room_num'] = $machine['room_num'];
			$renwu_data['renwu']['get_num'] = $machine['get_num'];
			$renwu_data['renwu']['complete_num'] = $machine['complete_num'];
			$renwu_status = M('renwu')->where(array('id' => $machine['renwu_id']))->field("status")->find();
			if($renwu_status){
				$renwu_data['renwu']['status'] = $renwu_status['status'];
			}
		}
		$renwu_data['version'] = M('version')->order("id desc")->find();
		$update = array('update_time' => time());
		if($complete_num){
			$update['complete_num'] = $complete_num;
		}
		M('machine')->where(array('id' => $machine['id']))->save($update);
		$renwu_data['code'] = 0;
		$this->ajaxReturn($renwu_data);
	}


	/**
	 * 重启成功
	 */
	public function restart_success(){
		$machine_code = I('post.machine_code');
		if(!$machine_code){
			$this->ajaxReturn(array('code' => -1, 'msg' => '缺少参数！'));
		}
		$machine = M('machine')->where(array('code' => $machine_code))->find();
		if(!$machine){
			$this->ajaxReturn(array('code' => -2, 'msg' => '机器不存在！'));
		}

		M('machine')->where(array('id' => $machine_code['id']))->save(array('restart' => 0));
		$data = array('code' => 0, 'msg' => '重启成功');
		$this->ajaxReturn($data);
	}

}